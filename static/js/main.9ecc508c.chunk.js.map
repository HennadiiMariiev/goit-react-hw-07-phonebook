{"version":3,"sources":["components/Form/StyledFormComponents.jsx","components/Form/form-helper.js","redux/items/items-selectors.js","api/axios.js","redux/items/items-operations.js","components/Form/Form.jsx","components/Contacts/StyledContactsComponents.jsx","components/AppComponents/AppComponents.jsx","redux/filter/filter-selectors.js","components/Contacts/Contacts.jsx","components/Filter/StyledFilterComponents.jsx","redux/filter/filter-actions.js","components/Filter/Filter.jsx","redux/items/items-actions.js","App.js","reportWebVitals.js","redux/filter/filter-reducer.js","redux/items/items-reducer.js","redux/loading/loading-reducer.js","redux/error/error-reducer.js","redux/store.js","index.js"],"names":["StyledForm","styled","form","StyledTitle","h1","StyledLable","label","StyledInput","input","StyledButton","button","toastMessage","type","text","message","toast","success","warn","error","info","dark","getItems","state","contacts","items","axios","defaults","baseURL","getAllContacts","a","get","data","postSingleContact","contact","post","removeSingleContact","id","delete","fetchContacts","createAsyncThunk","contactsAPI","length","fetchPostSingleContact","singleContact","name","fetchRemoveSingleContact","fetchRemoveAllContacts","forEach","el","useInput","useState","value","setValue","useEffect","match","pattern","isValidInput","current","style","Form","useSelector","dispatch","useDispatch","nameInput","useRef","numberInput","setName","number","setNumber","onInputChange","event","target","onSubmit","searchName","preventDefault","find","title","placeholder","required","ref","onChange","StyledSubTitle","h2","StyledDiv","div","StyledList","ul","StyledItem","li","StyledName","p","StyledNumber","StyledApp","section","StyledBanner","getFilter","filter","Contacts","makeContactsList","searchStr","toLowerCase","includes","applyFilter","map","onClick","backgroundColor","StyledLabel","setFilter","createAction","Filter","disabled","App","contactsOperations","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","filterReducer","createReducer","_","payload","toString","itemsReducer","fulfilled","item","Number","loadingReducer","pending","rejected","errorReducer","action","contactsReducer","combineReducers","isLoading","rootReducer","store","configureStore","reducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9ecc508c.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const StyledForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n\n  width: 100%;\n\n  margin-bottom: 1.5rem;\n`;\n\nexport const StyledTitle = styled.h1`\n  text-align: center;\n  text-transform: uppercase;\n  color: #2db57f;\n  font-size: 2rem;\n  margin-bottom: 1rem;\n\n  text-shadow: 1px 1px 1px -2px rgba(0, 0, 0, 0.56);\n`;\n\nexport const StyledLable = styled.label`\n  text-transform: uppercase;\n  font-size: 1.25rem;\n  font-weight: 600;\n\n  color: #2db57f;\n\n  display: flex;\n  align-self: flex-end;\n  align-items: center;\n  justify-content: space-between;\n\n  &:not(:last-of-type) {\n    margin-bottom: 1rem;\n  }\n\n  &:last-of-type {\n    margin-bottom: 2rem;\n  }\n`;\n\nexport const StyledInput = styled.input`\n  margin-left: 0.75rem;\n  display: block;\n\n  min-width: 330px;\n  height: 2rem;\n  font-size: 1.25rem;\n  font-weight: 400;\n  padding: 0.5rem 0.5rem 0.25rem;\n\n  border: 0;\n  border-bottom: 1px solid #c15ae0;\n  color: #1f2120;\n\n  &:-webkit-autofill,\n  &:-webkit-autofill:hover,\n  &:-webkit-autofill:focus,\n  &:-webkit-autofill:active {\n    -webkit-box-shadow: 0 0 0 30px #ffffff inset !important;\n  }\n\n  &:focus {\n    outline-color: #c15ae0;\n  }\n`;\n\nexport const StyledButton = styled.button`\n  width: 250px;\n  align-self: center;\n  padding: 0.5rem 1rem;\n  border: 1px solid #c15ae0;\n  border-radius: 0.5rem;\n\n  font-size: 1.5rem;\n\n  text-transform: uppercase;\n\n  color: #c15ae0;\n  background: transparent;\n  cursor: pointer;\n  transition: transform 250ms ease-in-out, box-shadow 250ms ease-in-out;\n\n  &:hover,\n  &:focus {\n    transform: translateY(-0.15rem);\n    box-shadow: 2px 2px 5px -2px rgba(0, 0, 0, 0.56);\n  }\n`;\n","import { toast } from 'react-toastify';\n\nexport const toastMessage = (type, text) => {\n  let message = null;\n  switch (type) {\n    case 'success':\n      message = () => toast.success(text);\n      break;\n\n    case 'warn':\n      message = () => toast.warn(text);\n      break;\n\n    case 'error':\n      message = () => toast.error(text);\n      break;\n\n    case 'info':\n      message = () => toast.info(text);\n      break;\n\n    default:\n      message = () => toast.dark(text);\n  }\n\n  message();\n};\n","export const getItems = (state) => state.contacts.items;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'http://localhost:7777';\n\nexport const getAllContacts = async () => {\n  const { data } = await axios.get('/contacts');\n  return data;\n};\n\nexport const postSingleContact = async (contact) => {\n  const { data } = await axios.post('/contacts/', contact);\n  return data;\n};\n\nexport const removeSingleContact = async (id) => {\n  const { data } = await axios.delete('/contacts/' + id);\n  return data;\n};\n","import * as contactsAPI from 'api/axios';\n// import { contactsActions } from 'redux/items/index';\nimport { createAsyncThunk } from '@reduxjs/toolkit';\nimport { toastMessage } from 'components/Form/form-helper';\n\n//#region THUNKS\n\nexport const fetchContacts = createAsyncThunk('items/fetchContacts', async () => {\n  try {\n    const contacts = await contactsAPI.getAllContacts();\n\n    if (contacts.length > 0) toastMessage('info', `${contacts.length} contact(s) successfully loaded!`);\n    else toastMessage('warn', `No contacts founded.`);\n\n    return contacts;\n  } catch (err) {\n    toastMessage('error', `${err}`);\n  }\n});\n\nexport const fetchPostSingleContact = createAsyncThunk('items/fetchPostSingleContact', async (contact) => {\n  try {\n    const singleContact = await contactsAPI.postSingleContact(contact);\n\n    toastMessage('success', `New contact \"${contact.name}\" was added!`);\n\n    return singleContact;\n  } catch (err) {\n    toastMessage('error', `${err}`);\n  }\n});\n\nexport const fetchRemoveSingleContact = createAsyncThunk('items/fetchRemoveSingleContact', async ({ id, name }) => {\n  try {\n    await contactsAPI.removeSingleContact(id);\n\n    toastMessage('info', `Contact \"${name}\" was deleted!`);\n\n    return id;\n  } catch (err) {\n    toastMessage('error', `${err}`);\n  }\n});\n\nexport const fetchRemoveAllContacts = createAsyncThunk('items/fetchRemoveAllContacts', async () => {\n  try {\n    let contacts = await contactsAPI.getAllContacts();\n    contacts.forEach(async (el) => await contactsAPI.removeSingleContact(el.id));\n\n    toastMessage('info', `${contacts.length} contact(s) removed!`);\n\n    return [];\n  } catch (err) {\n    toastMessage('error', `${err}`);\n  }\n});\n\n//#endregion\n\n//#region operations without thunk\n\n// export const fetchContacts = () => async (dispatch) => {\n//   dispatch(contactsActions.fetchContactsRequest());\n\n//   try {\n//     const contacts = await contactsAPI.getAllContacts();\n\n//     dispatch(contactsActions.fetchContactsSuccess(contacts));\n//   } catch (error) {\n//     dispatch(contactsActions.fetchContactsError(error));\n//   }\n// };\n\n// export const fetchPostSingleContact = (contact) => async (dispatch) => {\n//   dispatch(contactsActions.fetchContactsRequest());\n\n//   try {\n//     const contactRequest = await contactsAPI.postSingleContact(contact);\n//     dispatch(contactsActions.fetchSingleContactSuccess(contactRequest));\n//   } catch (error) {\n//     dispatch(contactsActions.fetchContactsError(error));\n//   }\n// };\n\n// export const fetchRemoveSingleContact = (id) => async (dispatch) => {\n//   dispatch(contactsActions.fetchContactsRequest());\n\n//   try {\n//     await contactsAPI.removeSingleContact(id);\n//     dispatch(contactsActions.fetchRemoveContactSuccess(id));\n//   } catch (error) {\n//     dispatch(contactsActions.fetchContactsError(error));\n//   }\n// };\n\n// export const fetchRemoveAllContacts = () => async (dispatch) => {\n//   dispatch(contactsActions.fetchContactsRequest());\n\n//   try {\n//     const contacts = await contactsAPI.getAllContacts();\n//     contacts.forEach((el) => contactsAPI.removeSingleContact(el.id));\n//     dispatch(contactsActions.fetchRemoveAllContactsSuccess(contacts));\n//   } catch (error) {\n//     dispatch(contactsActions.fetchContactsError(error));\n//   }\n// };\n\n//#endregion\n","import React, { useEffect, useState, useRef } from 'react';\n\nimport {\n  StyledForm,\n  StyledTitle,\n  StyledLable,\n  StyledInput,\n  StyledButton as StyledPrimaryButton,\n} from './StyledFormComponents';\nimport { toastMessage } from './form-helper';\nimport { useSelector } from 'react-redux';\nimport { getItems } from 'redux/items/items-selectors';\nimport { useDispatch } from 'react-redux';\nimport { fetchPostSingleContact } from 'redux/items/items-operations';\n\nconst useInput = (input) => {\n  const [value, setValue] = useState(() => '');\n\n  useEffect(() => {\n    function isValidInput(input) {\n      if (!input.value.match(input.pattern) && input.value.length) return false;\n\n      return true;\n    }\n\n    if (!isValidInput(input.current)) {\n      input.current.style = 'background-color: #f7d7d7;';\n    } else {\n      input.current.style = 'background-color: transparent;';\n    }\n  }, [value, input]);\n\n  return [value, setValue];\n};\n\nexport function Form() {\n  const items = useSelector(getItems);\n  const dispatch = useDispatch();\n\n  const nameInput = useRef();\n  const numberInput = useRef();\n\n  const [name, setName] = useInput(nameInput);\n  const [number, setNumber] = useInput(numberInput);\n\n  //#region methods\n  const onInputChange = (event) => {\n    switch (event.target.name) {\n      case 'name':\n        setName(event.target.value);\n        break;\n\n      case 'number':\n        setNumber(event.target.value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const clearInputs = () => {\n    setName('');\n    setNumber('');\n  };\n\n  const isNameInContacts = (searchName) => items.find(({ name }) => name === searchName);\n\n  const submitNewContact = (event) => {\n    event.preventDefault();\n\n    if (isNameInContacts(name)) {\n      toastMessage('warn', `There is an existing contact with name \"${name}\"!`);\n      return;\n    }\n\n    dispatch(fetchPostSingleContact({ name, number }));\n\n    clearInputs();\n  };\n  //#endregion\n\n  return (\n    <>\n      <StyledTitle>Phonebook</StyledTitle>\n      <StyledForm onSubmit={submitNewContact}>\n        <StyledLable>\n          Name\n          <StyledInput\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            placeholder=\"Please, type contact name\"\n            required\n            value={name}\n            ref={nameInput}\n            onChange={onInputChange}\n          />\n        </StyledLable>\n        <StyledLable>\n          Number\n          <StyledInput\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            placeholder=\"Please, type contact number\"\n            required\n            value={number}\n            ref={numberInput}\n            onChange={onInputChange}\n          />\n        </StyledLable>\n        <StyledPrimaryButton type=\"submit\">Add contact</StyledPrimaryButton>\n      </StyledForm>\n    </>\n  );\n}\n","import styled from 'styled-components';\n\nexport const StyledSubTitle = styled.h2`\n  color: #2db57f;\n  text-transform: uppercase;\n  margin-bottom: 1rem;\n`;\n\nexport const StyledDiv = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n\n  width: 100%;\n\n  padding: 1rem 1.5rem;\n  background-color: #d6d6d6;\n`;\n\nexport const StyledButton = styled.button`\n  align-self: center;\n  padding: 0.25rem 0.75rem;\n  border: 1px solid #c15ae0;\n  border-radius: 0.5rem;\n\n  font-size: 0.75rem;\n\n  text-transform: uppercase;\n\n  color: #c15ae0;\n  background: #ffffff;\n  cursor: pointer;\n  transition: transform 250ms ease-in-out, box-shadow 250ms ease-in-out;\n\n  &:hover,\n  &:focus {\n    transform: translateY(-0.1rem);\n    box-shadow: 2px 2px 5px -2px rgba(0, 0, 0, 0.56);\n  }\n`;\n\nexport const StyledList = styled.ul`\n  display: flex;\n  width: 100%;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n\n  list-style: none;\n\n  margin-bottom: 1rem;\n`;\n\nexport const StyledItem = styled.li`\n  width: 100%;\n  display: flex;\n  align-items: stretch;\n  justify-content: space-between;\n\n  background-color: #ffffff;\n\n  padding: 0.5rem 1rem;\n\n  &:not(:last-of-type) {\n    margin-bottom: 1rem;\n  }\n`;\n\nexport const StyledName = styled.p`\n  font-size: 1rem;\n  font-weight: 600;\n\n  display: block;\n  min-width: 40%;\n`;\n\nexport const StyledNumber = styled.p`\n  font-size: 1rem;\n  font-weight: 600;\n  display: block;\n  min-width: 35%;\n  color: #2db57f;\n`;\n","import styled from \"styled-components\";\n\nexport const StyledApp = styled.section`\n  background-color: #ffffff;\n  border: 1px solid #c15ae0;\n  border-radius: 1rem;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 1rem 1.5rem;\n\n  width: 100%;\n\n  box-shadow: 7px 7px 15px -8px rgba(0, 0, 0, 0.56);\n`;\n\nexport const StyledBanner = styled.p`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  width: 100%;\n\n  padding: 1rem 1.5rem;\n  color: #fafafa;\n  text-transform: uppercase;\n  font-weight: 600;\n  font-size: 1.5rem;\n\n  background-color: #d6d6d6;\n`;\n","export const getFilter = (state) => state.contacts.filter;\n","import {\n  StyledItem,\n  StyledName,\n  StyledNumber,\n  StyledDiv,\n  StyledList,\n  StyledSubTitle,\n  StyledButton,\n} from './StyledContactsComponents';\n\nimport { StyledBanner } from 'components/AppComponents/AppComponents';\n\nimport { StyledButton as StyledPrimaryButton } from 'components/Form/StyledFormComponents';\nimport { fetchRemoveSingleContact, fetchRemoveAllContacts } from 'redux/items/items-operations';\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getItems } from 'redux/items/items-selectors';\nimport { getFilter } from 'redux/filter/filter-selectors';\n\nconst applyFilter = (items, filter) => {\n  if (filter === '') {\n    return items;\n  }\n\n  const searchStr = filter.toLowerCase();\n  const filteredContacts = items.filter((contact) => contact.name.toLowerCase().includes(searchStr));\n  return filteredContacts;\n};\n\nexport const Contacts = () => {\n  const items = useSelector(getItems);\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  const makeContactsList = applyFilter(items, filter).map(({ name, number, id }) => {\n    return (\n      <StyledItem key={id}>\n        <StyledName>{name}</StyledName>\n        <StyledNumber>{number}</StyledNumber>\n        <StyledButton\n          onClick={(event) => {\n            dispatch(fetchRemoveSingleContact({ id: event.target.value, name }));\n          }}\n          value={id}\n        >\n          Remove\n        </StyledButton>\n      </StyledItem>\n    );\n  });\n\n  return (\n    <StyledDiv>\n      {items.length === 0 ? (\n        <StyledBanner>No contacts...</StyledBanner>\n      ) : (\n        <>\n          <StyledSubTitle>Contacts</StyledSubTitle>\n          <StyledList>{makeContactsList}</StyledList>\n          <StyledPrimaryButton\n            onClick={() => dispatch(fetchRemoveAllContacts())}\n            style={{ backgroundColor: '#FAFAFA' }}\n          >\n            Remove all\n          </StyledPrimaryButton>\n        </>\n      )}\n    </StyledDiv>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const StyledLabel = styled.label`\n  text-transform: uppercase;\n  font-size: 1.25rem;\n  font-weight: 600;\n\n  color: #2db57f;\n\n  display: flex;\n  align-self: flex-end;\n  align-items: center;\n  justify-content: space-between;\n\n  &:not(:last-of-type) {\n    margin-bottom: 1rem;\n  }\n\n  &:last-of-type {\n    margin-bottom: 2rem;\n  }\n`;\n\nexport const StyledInput = styled.input`\n  margin-left: 0.75rem;\n  display: block;\n  min-width: 350px;\n  height: 2rem;\n  font-size: 1.25rem;\n  font-weight: 400;\n  padding: 0.5rem 0.5rem 0.25rem;\n\n  border: 0;\n  border-bottom: 1px solid #c15ae0;\n  color: #1f2120;\n\n  &:-webkit-autofill,\n  &:-webkit-autofill:hover,\n  &:-webkit-autofill:focus,\n  &:-webkit-autofill:active {\n    -webkit-box-shadow: 0 0 0 30px #ffffff inset !important;\n  }\n\n  &:focus {\n    outline-color: #c15ae0;\n  }\n\n  &:disabled {\n    border: 1px solid #e1e8e5;\n  }\n`;\n","import { createAction } from '@reduxjs/toolkit';\n\nexport const setFilter = createAction('filter/set');\n","import PropTypes from 'prop-types';\nimport { StyledInput, StyledLabel } from './StyledFilterComponents';\nimport { setFilter } from 'redux/filter/filter-actions';\nimport { getItems } from 'redux/items/items-selectors';\nimport { getFilter } from 'redux/filter/filter-selectors';\n\nimport { useSelector } from 'react-redux';\nimport { useDispatch } from 'react-redux';\n\nexport const Filter = () => {\n  const filter = useSelector(getFilter);\n  const items = useSelector(getItems);\n\n  const dispatch = useDispatch();\n\n  return (\n    <div>\n      <StyledLabel>\n        Search\n        <StyledInput\n          type=\"text\"\n          name=\"search\"\n          placeholder=\"Please, type search name\"\n          value={filter}\n          onChange={(event) => dispatch(setFilter(event.target.value))}\n          disabled={items.length ? false : true}\n        />\n      </StyledLabel>\n    </div>\n  );\n};\n\nFilter.propTypes = {\n  onFilterChange: PropTypes.func,\n  filter: PropTypes.string,\n};\n","import { createAction } from '@reduxjs/toolkit';\n// pending\nexport const fetchContactsRequest = createAction('items/fetchContactsRequest');\n// fullfilled\nexport const fetchContactsSuccess = createAction('items/fetchContactsSuccess');\n//rejected\nexport const fetchContactsError = createAction('items/fetchContactsError');\n\nexport const fetchSingleContactSuccess = createAction('items/fetchSingleContactSuccess');\n\nexport const fetchRemoveContactSuccess = createAction('items/fetchRemoveContactSuccess');\n\nexport const fetchRemoveAllContactsSuccess = createAction('items/fetchRemoveAllContactsSuccess');\n","import { useEffect } from 'react';\nimport { Form } from 'components/Form/Form';\nimport { Contacts } from 'components/Contacts/Contacts';\nimport { Filter } from 'components/Filter/Filter';\nimport { ToastContainer } from 'react-toastify';\n\nimport { StyledApp } from 'components/AppComponents/AppComponents';\n\nimport { useDispatch } from 'react-redux';\n\nimport 'react-toastify/dist/ReactToastify.css';\nimport { contactsOperations } from 'redux/items';\n\nexport default function App() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(contactsOperations.fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <StyledApp>\n      <Form />\n      <Filter />\n      <Contacts />\n      <ToastContainer />\n    </StyledApp>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createReducer } from '@reduxjs/toolkit';\nimport { setFilter } from './filter-actions';\n\nexport const filterReducer = createReducer('', {\n  [setFilter]: (_, { payload }) => payload.toString(),\n});\n\n//#region BEFORE REFACTOR\n// import { filterTypes } from './filter-types';\n\n// export const filterReducer = (filter = '', { type, payload }) => {\n//   switch (type) {\n//     case filterTypes.CLEAR:\n//     case filterTypes.SET:\n//       return (filter = payload);\n\n//     default:\n//       return filter;\n//   }\n// };\n//#endregion\n","import { createReducer } from '@reduxjs/toolkit';\n// import { contactsActions } from './index';\nimport {\n  fetchContacts,\n  fetchPostSingleContact,\n  fetchRemoveSingleContact,\n  fetchRemoveAllContacts,\n} from './items-operations';\n\nexport const itemsReducer = createReducer([], {\n  [fetchContacts.fulfilled]: (state, { payload }) => [...state, ...payload],\n  [fetchPostSingleContact.fulfilled]: (state, { payload }) => [...state, payload],\n  [fetchRemoveSingleContact.fulfilled]: (state, { payload }) => state.filter((item) => item.id !== Number(payload)),\n  [fetchRemoveAllContacts.fulfilled]: () => [],\n\n  // [contactsActions.fetchContactsSuccess]: (state, { payload }) => [...state, ...payload],\n  // [contactsActions.fetchSingleContactSuccess]: (state, { payload }) => [...state, payload],\n  // [contactsActions.fetchRemoveContactSuccess]: (state, { payload }) =>\n  //   state.filter((item) => item.id !== Number(payload)),\n  // [contactsActions.fetchRemoveAllContactsSuccess]: () => [],\n});\n","import { createReducer } from '@reduxjs/toolkit';\n\nimport {\n  fetchPostSingleContact,\n  fetchContacts,\n  fetchRemoveSingleContact,\n  fetchRemoveAllContacts,\n} from 'redux/items/items-operations';\n\nexport const loadingReducer = createReducer(false, {\n  [fetchContacts.pending]: () => true,\n  [fetchPostSingleContact.pending]: () => true,\n  [fetchRemoveSingleContact.pending]: () => true,\n  [fetchRemoveAllContacts.pending]: () => true,\n\n  [fetchContacts.fulfilled]: () => false,\n  [fetchPostSingleContact.fulfilled]: () => false,\n  [fetchRemoveSingleContact.fulfilled]: () => false,\n  [fetchRemoveAllContacts.fulfilled]: () => false,\n\n  [fetchContacts.rejected]: () => false,\n  [fetchPostSingleContact.rejected]: () => false,\n  [fetchRemoveSingleContact.rejected]: () => false,\n  [fetchRemoveAllContacts.rejected]: () => false,\n});\n","import { createReducer } from '@reduxjs/toolkit';\n\nimport {\n  fetchPostSingleContact,\n  fetchContacts,\n  fetchRemoveSingleContact,\n  fetchRemoveAllContacts,\n} from 'redux/items/items-operations';\n\nexport const errorReducer = createReducer(null, {\n  [fetchContacts.pending]: () => null,\n  [fetchPostSingleContact.pending]: () => null,\n  [fetchRemoveSingleContact.pending]: () => null,\n  [fetchRemoveAllContacts.pending]: () => null,\n\n  [fetchContacts.rejected]: (_, action) => action.payload,\n  [fetchPostSingleContact.rejected]: (_, action) => action.payload,\n  [fetchRemoveSingleContact.rejected]: (_, action) => action.payload,\n  [fetchRemoveAllContacts.rejected]: (_, action) => action.payload,\n});\n","import { combineReducers } from 'redux';\nimport { configureStore } from '@reduxjs/toolkit';\nimport { filterReducer } from 'redux/filter/filter-reducer';\nimport { itemsReducer } from 'redux/items/items-reducer';\nimport { loadingReducer } from 'redux/loading/loading-reducer';\nimport { errorReducer } from 'redux/error/error-reducer';\n\nconst initialState = {\n  contacts: {\n    items: [],\n    filter: '',\n    isLoading: false,\n    error: null,\n  },\n};\n\nconst contactsReducer = combineReducers({\n  items: itemsReducer,\n  filter: filterReducer,\n  isLoading: loadingReducer,\n  error: errorReducer,\n});\n\nconst rootReducer = combineReducers({\n  contacts: contactsReducer,\n});\n\nconst store = configureStore({\n  reducer: rootReducer,\n});\n\nexport { initialState, store };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport { store } from 'redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}